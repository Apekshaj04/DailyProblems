class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        int ans = initial[0];
        int max = Integer.MIN_VALUE;
        int n = graph.length;
        boolean[] visited = new boolean[n];
        for(int i :initial){
            Arrays.fill(visited,false);
            int count = dfs(i,graph,initial,visited);
            if(count>max){
                max = count ;
                ans =  i;
            }
        }
        return ans;
    }
    public int dfs(int i ,int[][] graph,int[] initial,boolean[] visited){
        visited[i] = true;
        int size = 1;
        for(int j = 0;j<graph[i].length;j++){
            if(i!=j && !visited[j] && graph[i][j]==1){
                for(int k:initial){
                    if(j==k){
                        return Integer.MIN_VALUE;
                    }
                    int next = dfs(j,graph,initial,visited);
                    if(next==Integer.MIN_VALUE){
                        return next;
                    }
                    else{
                        size+=next;
                    }
                }
            }
        }
        return size;
    }
}